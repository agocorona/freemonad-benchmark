
==================== FINAL INTERFACE ====================
2016-01-04 15:35:11.6492716 UTC

interface main@main:Data.TConsList 7102
  interface hash: f69843bd9bd868f48fb421f468e34bbd
  ABI hash: cbd494317de229fc43c010eb007540c9
  export-list hash: 1c89dc2b0a9466dfc951fd535685418f
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: edf1f9c412498d891deeefdf393a057a
  sig of: Nothing
  used TH splices: False
  where
exports:
  Data.TConsList.TConsList{Data.TConsList.CNil Data.TConsList.Cons}
module dependencies: Data.Interface.Sequence
                     Data.Interface.TSequence
package dependencies: base-4.8.1.0* ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0
orphans: base-4.8.1.0:GHC.Base base-4.8.1.0:GHC.Float
         main@main:Data.Interface.TSequence
family instance modules: base-4.8.1.0:Control.Applicative
                         base-4.8.1.0:Data.Either base-4.8.1.0:Data.Monoid
                         base-4.8.1.0:Data.Type.Equality base-4.8.1.0:GHC.Generics
import  -/  base-4.8.1.0:Prelude 518f762991bc287d78f21a73c974da1f
import  -/  Data.Interface.TSequence e7c1c4592f1a02ccf97efe09e6a07e60
  exports: 30011f52b7228743e59eb112c86ccb83
  :| c61e394008b9bdc16ca29eb7a10bc17e
  <| 9b939fc7d7c896f91aa4c1a3b2877c7d
  TEmptyL 8e030811f3682aa0e59687e95986ede7
  TSequence 700ffae603f8ab46db12fb2efd22dad5
  tempty 4a6d1ef7a996ab8c9b0927d6fa434398
  tsingleton 4f6df92211cfc50efea0da8c4340430d
  tviewl 7d4188ec9181eb1c6a61292f35405bd5
ce1fe5e5143345a2ca937d831a92a122
  $fTSequenceTConsList ::
    Data.Interface.TSequence.TSequence Data.TConsList.TConsList
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Data.TConsList.TConsList
                  Data.TConsList.$WCNil
                  Data.TConsList.$fTSequenceTConsList_$ctsingleton
                  Data.TConsList.$fTSequenceTConsList_$c><
                  Data.TConsList.$fTSequenceTConsList_$ctviewl
                  Data.TConsList.$fTSequenceTConsList_$ctviewr
                  Data.TConsList.$fTSequenceTConsList_$c|>
                  (\ @ (c :: * -> * -> *) @ x @ y @ z ->
                   Data.TConsList.Cons @ c @ x @ z @ y) -}
ce1fe5e5143345a2ca937d831a92a122
  $fTSequenceTConsList_$c>< ::
    Data.TConsList.TConsList c x y
    -> Data.TConsList.TConsList c y z -> Data.TConsList.TConsList c x z
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U> -}
ce1fe5e5143345a2ca937d831a92a122
  $fTSequenceTConsList_$ctsingleton ::
    c x y -> Data.TConsList.TConsList c x y
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ (c :: * -> * -> *) @ x @ y c1 :: c x y ->
                 Data.TConsList.Cons
                   @ c
                   @ x
                   @ y
                   @ y
                   c1
                   (Data.TConsList.$WCNil @ c @ y)) -}
ce1fe5e5143345a2ca937d831a92a122
  $fTSequenceTConsList_$ctviewl ::
    Data.TConsList.TConsList c x y
    -> Data.Interface.TSequence.TViewL Data.TConsList.TConsList c x y
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ (c :: * -> * -> *)
                   @ x
                   @ y
                   ds :: Data.TConsList.TConsList c x y ->
                 case ds of wild {
                   Data.TConsList.CNil dt
                   -> (Data.Interface.TSequence.$WTEmptyL
                         @ Data.TConsList.TConsList
                         @ c
                         @ x)
                        `cast`
                      (Data.Interface.TSequence.TViewL
                         <Data.TConsList.TConsList>_R <c>_N <x>_N dt)_R
                   Data.TConsList.Cons y1 h t
                   -> Data.Interface.TSequence.:|
                        @ Data.TConsList.TConsList
                        @ c
                        @ x
                        @ y
                        @ y1
                        h
                        t }) -}
ce1fe5e5143345a2ca937d831a92a122
  $fTSequenceTConsList_$ctviewr ::
    Data.TConsList.TConsList c x y
    -> Data.Interface.TSequence.TViewR Data.TConsList.TConsList c x y
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
ce1fe5e5143345a2ca937d831a92a122
  $fTSequenceTConsList_$c|> ::
    Data.TConsList.TConsList c x y
    -> c y z -> Data.TConsList.TConsList c x z
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ (c :: * -> * -> *)
                   @ x
                   @ y
                   @ z
                   l :: Data.TConsList.TConsList c x y
                   r :: c y z ->
                 Data.TConsList.$fTSequenceTConsList_$c><
                   @ c
                   @ x
                   @ y
                   @ z
                   l
                   (Data.TConsList.Cons
                      @ c
                      @ y
                      @ z
                      @ z
                      r
                      (Data.TConsList.$WCNil @ c @ z))) -}
ce1fe5e5143345a2ca937d831a92a122
  type role TConsList representational nominal nominal
  data TConsList (c :: * -> * -> *) x y where
    CNil :: TConsList c y y
    Cons :: (c x y1) -> (Data.TConsList.TConsList c y1 y)
            -> TConsList c x y
instance Data.Interface.TSequence.TSequence [Data.TConsList.TConsList]
  = Data.TConsList.$fTSequenceTConsList
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

