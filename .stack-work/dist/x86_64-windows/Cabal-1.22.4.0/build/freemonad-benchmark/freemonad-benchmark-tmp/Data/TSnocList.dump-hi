
==================== FINAL INTERFACE ====================
2016-01-04 15:35:12.0173189 UTC

interface main@main:Data.TSnocList 7102
  interface hash: 4ed8487f113f5aede7de28fd13823bc5
  ABI hash: 1cddfc473ad20556d8d48902dffa57de
  export-list hash: 27d0591bf9510461be7a7c4302c51a18
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: edf1f9c412498d891deeefdf393a057a
  sig of: Nothing
  used TH splices: False
  where
exports:
  Data.TSnocList.TSnocList{Data.TSnocList.SNil Data.TSnocList.Snoc}
module dependencies: Data.Interface.Sequence
                     Data.Interface.TSequence
package dependencies: base-4.8.1.0* ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0
orphans: base-4.8.1.0:GHC.Base base-4.8.1.0:GHC.Float
         main@main:Data.Interface.TSequence
family instance modules: base-4.8.1.0:Control.Applicative
                         base-4.8.1.0:Data.Either base-4.8.1.0:Data.Monoid
                         base-4.8.1.0:Data.Type.Equality base-4.8.1.0:GHC.Generics
import  -/  base-4.8.1.0:Prelude 518f762991bc287d78f21a73c974da1f
import  -/  Data.Interface.TSequence e7c1c4592f1a02ccf97efe09e6a07e60
  exports: 30011f52b7228743e59eb112c86ccb83
  :|< e250b7900f4f97e01faae2b4d90b317d
  TEmptyR d9ade836263a2fd93d2a726bd18418e7
  TSequence 700ffae603f8ab46db12fb2efd22dad5
  tempty 4a6d1ef7a996ab8c9b0927d6fa434398
  tsingleton 4f6df92211cfc50efea0da8c4340430d
  tviewr c0638f7de19feff2b69537e841e9c819
  |> 0d74591191a248291626d18337b7504e
2c9451c4ab284b4a815f2bf8617a1df8
  $fTSequenceTSnocList ::
    Data.Interface.TSequence.TSequence Data.TSnocList.TSnocList
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Data.TSnocList.TSnocList
                  Data.TSnocList.$WSNil
                  Data.TSnocList.$fTSequenceTSnocList_$ctsingleton
                  Data.TSnocList.$fTSequenceTSnocList_$c><
                  Data.TSnocList.$fTSequenceTSnocList_$ctviewl
                  Data.TSnocList.$fTSequenceTSnocList_$ctviewr
                  (\ @ (c :: * -> * -> *) @ x @ y @ z ->
                   Data.TSnocList.Snoc @ c @ x @ z @ y)
                  Data.TSnocList.$fTSequenceTSnocList_$c<| -}
2c9451c4ab284b4a815f2bf8617a1df8
  $fTSequenceTSnocList_$c<| ::
    c x y
    -> Data.TSnocList.TSnocList c y z -> Data.TSnocList.TSnocList c x z
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ (c :: * -> * -> *)
                   @ x
                   @ y
                   @ z
                   l :: c x y
                   r :: Data.TSnocList.TSnocList c y z ->
                 Data.TSnocList.$fTSequenceTSnocList_$c><
                   @ c
                   @ x
                   @ y
                   @ z
                   (Data.TSnocList.Snoc
                      @ c
                      @ x
                      @ y
                      @ x
                      (Data.TSnocList.$WSNil @ c @ x)
                      l)
                   r) -}
2c9451c4ab284b4a815f2bf8617a1df8
  $fTSequenceTSnocList_$c>< ::
    Data.TSnocList.TSnocList c x y
    -> Data.TSnocList.TSnocList c y z -> Data.TSnocList.TSnocList c x z
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
2c9451c4ab284b4a815f2bf8617a1df8
  $fTSequenceTSnocList_$ctsingleton ::
    c x y -> Data.TSnocList.TSnocList c x y
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ (c :: * -> * -> *) @ x @ y c1 :: c x y ->
                 Data.TSnocList.Snoc
                   @ c
                   @ x
                   @ y
                   @ x
                   (Data.TSnocList.$WSNil @ c @ x)
                   c1) -}
2c9451c4ab284b4a815f2bf8617a1df8
  $fTSequenceTSnocList_$ctviewl ::
    Data.TSnocList.TSnocList c x y
    -> Data.Interface.TSequence.TViewL Data.TSnocList.TSnocList c x y
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
2c9451c4ab284b4a815f2bf8617a1df8
  $fTSequenceTSnocList_$ctviewr ::
    Data.TSnocList.TSnocList c x y
    -> Data.Interface.TSequence.TViewR Data.TSnocList.TSnocList c x y
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ (c :: * -> * -> *)
                   @ x
                   @ y
                   ds :: Data.TSnocList.TSnocList c x y ->
                 case ds of wild {
                   Data.TSnocList.SNil dt
                   -> (Data.Interface.TSequence.$WTEmptyR
                         @ Data.TSnocList.TSnocList
                         @ c
                         @ x)
                        `cast`
                      (Data.Interface.TSequence.TViewR
                         <Data.TSnocList.TSnocList>_R <c>_N <x>_N dt)_R
                   Data.TSnocList.Snoc y1 p l
                   -> Data.Interface.TSequence.:|<
                        @ Data.TSnocList.TSnocList
                        @ c
                        @ x
                        @ y
                        @ y1
                        p
                        l }) -}
2c9451c4ab284b4a815f2bf8617a1df8
  type role TSnocList representational nominal nominal
  data TSnocList (c :: * -> * -> *) x y where
    SNil :: TSnocList c y y
    Snoc :: (Data.TSnocList.TSnocList c x y1) -> (c y1 y)
            -> TSnocList c x y
instance Data.Interface.TSequence.TSequence [Data.TSnocList.TSnocList]
  = Data.TSnocList.$fTSequenceTSnocList
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

